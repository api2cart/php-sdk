<?php
/**
 * AttributeApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.11.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * AttributeApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AttributeApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for attributeAdd
     *
     * attribute.add.
     *
     */
    public function testAttributeAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attributeAssignGroup
     *
     * attribute.assign.group.
     *
     */
    public function testAttributeAssignGroup()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attributeAssignSet
     *
     * attribute.assign.set.
     *
     */
    public function testAttributeAssignSet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attributeAttributesetList
     *
     * attribute.attributeset.list.
     *
     */
    public function testAttributeAttributesetList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attributeCount
     *
     * attribute.count.
     *
     */
    public function testAttributeCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attributeDelete
     *
     * attribute.delete.
     *
     */
    public function testAttributeDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attributeGroupList
     *
     * attribute.group.list.
     *
     */
    public function testAttributeGroupList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attributeInfo
     *
     * attribute.info.
     *
     */
    public function testAttributeInfo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attributeList
     *
     * attribute.list.
     *
     */
    public function testAttributeList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attributeTypeList
     *
     * attribute.type.list.
     *
     */
    public function testAttributeTypeList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attributeUnassignGroup
     *
     * attribute.unassign.group.
     *
     */
    public function testAttributeUnassignGroup()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attributeUnassignSet
     *
     * attribute.unassign.set.
     *
     */
    public function testAttributeUnassignSet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attributeUpdate
     *
     * attribute.update.
     *
     */
    public function testAttributeUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attributeValueAdd
     *
     * attribute.value.add.
     *
     */
    public function testAttributeValueAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attributeValueDelete
     *
     * attribute.value.delete.
     *
     */
    public function testAttributeValueDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attributeValueUpdate
     *
     * attribute.value.update.
     *
     */
    public function testAttributeValueUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
