<?php
/**
 * ProductApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.11.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProductApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProductApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for productAdd
     *
     * product.add.
     *
     */
    public function testProductAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productAddBatch
     *
     * product.add.batch.
     *
     */
    public function testProductAddBatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productAttributeList
     *
     * product.attribute.list.
     *
     */
    public function testProductAttributeList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productAttributeValueSet
     *
     * product.attribute.value.set.
     *
     */
    public function testProductAttributeValueSet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productAttributeValueUnset
     *
     * product.attribute.value.unset.
     *
     */
    public function testProductAttributeValueUnset()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productBrandList
     *
     * product.brand.list.
     *
     */
    public function testProductBrandList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productChildItemFind
     *
     * product.child_item.find.
     *
     */
    public function testProductChildItemFind()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productChildItemInfo
     *
     * product.child_item.info.
     *
     */
    public function testProductChildItemInfo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productChildItemList
     *
     * product.child_item.list.
     *
     */
    public function testProductChildItemList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productCount
     *
     * product.count.
     *
     */
    public function testProductCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productCurrencyAdd
     *
     * product.currency.add.
     *
     */
    public function testProductCurrencyAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productCurrencyList
     *
     * product.currency.list.
     *
     */
    public function testProductCurrencyList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productDelete
     *
     * product.delete.
     *
     */
    public function testProductDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productDeleteBatch
     *
     * product.delete.batch.
     *
     */
    public function testProductDeleteBatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productFields
     *
     * product.fields.
     *
     */
    public function testProductFields()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productFind
     *
     * product.find.
     *
     */
    public function testProductFind()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productImageAdd
     *
     * product.image.add.
     *
     */
    public function testProductImageAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productImageDelete
     *
     * product.image.delete.
     *
     */
    public function testProductImageDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productImageUpdate
     *
     * product.image.update.
     *
     */
    public function testProductImageUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productInfo
     *
     * product.info.
     *
     */
    public function testProductInfo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productList
     *
     * product.list.
     *
     */
    public function testProductList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productManufacturerAdd
     *
     * product.manufacturer.add.
     *
     */
    public function testProductManufacturerAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productOptionAdd
     *
     * product.option.add.
     *
     */
    public function testProductOptionAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productOptionAssign
     *
     * product.option.assign.
     *
     */
    public function testProductOptionAssign()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productOptionDelete
     *
     * product.option.delete.
     *
     */
    public function testProductOptionDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productOptionList
     *
     * product.option.list.
     *
     */
    public function testProductOptionList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productOptionValueAdd
     *
     * product.option.value.add.
     *
     */
    public function testProductOptionValueAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productOptionValueAssign
     *
     * product.option.value.assign.
     *
     */
    public function testProductOptionValueAssign()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productOptionValueDelete
     *
     * product.option.value.delete.
     *
     */
    public function testProductOptionValueDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productOptionValueUpdate
     *
     * product.option.value.update.
     *
     */
    public function testProductOptionValueUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productPriceAdd
     *
     * product.price.add.
     *
     */
    public function testProductPriceAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productPriceDelete
     *
     * product.price.delete.
     *
     */
    public function testProductPriceDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productPriceUpdate
     *
     * product.price.update.
     *
     */
    public function testProductPriceUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productReviewList
     *
     * product.review.list.
     *
     */
    public function testProductReviewList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productStoreAssign
     *
     * product.store.assign.
     *
     */
    public function testProductStoreAssign()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productTaxAdd
     *
     * product.tax.add.
     *
     */
    public function testProductTaxAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productUpdate
     *
     * product.update.
     *
     */
    public function testProductUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productUpdateBatch
     *
     * product.update.batch.
     *
     */
    public function testProductUpdateBatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantAdd
     *
     * product.variant.add.
     *
     */
    public function testProductVariantAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantAddBatch
     *
     * product.variant.add.batch.
     *
     */
    public function testProductVariantAddBatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantCount
     *
     * product.variant.count.
     *
     */
    public function testProductVariantCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantDelete
     *
     * product.variant.delete.
     *
     */
    public function testProductVariantDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantDeleteBatch
     *
     * product.variant.delete.batch.
     *
     */
    public function testProductVariantDeleteBatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantImageAdd
     *
     * product.variant.image.add.
     *
     */
    public function testProductVariantImageAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantImageDelete
     *
     * product.variant.image.delete.
     *
     */
    public function testProductVariantImageDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantInfo
     *
     * product.variant.info.
     *
     */
    public function testProductVariantInfo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantList
     *
     * product.variant.list.
     *
     */
    public function testProductVariantList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantPriceAdd
     *
     * product.variant.price.add.
     *
     */
    public function testProductVariantPriceAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantPriceDelete
     *
     * product.variant.price.delete.
     *
     */
    public function testProductVariantPriceDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantPriceUpdate
     *
     * product.variant.price.update.
     *
     */
    public function testProductVariantPriceUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantUpdate
     *
     * product.variant.update.
     *
     */
    public function testProductVariantUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantUpdateBatch
     *
     * product.variant.update.batch.
     *
     */
    public function testProductVariantUpdateBatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
