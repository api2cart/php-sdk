<?php
/**
 * CartApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.11.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CartApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CartApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for cartBridge
     *
     * cart.bridge.
     *
     */
    public function testCartBridge()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartCatalogPriceRulesCount
     *
     * cart.catalog_price_rules.count.
     *
     */
    public function testCartCatalogPriceRulesCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartCatalogPriceRulesList
     *
     * cart.catalog_price_rules.list.
     *
     */
    public function testCartCatalogPriceRulesList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartClearCache
     *
     * cart.clear_cache.
     *
     */
    public function testCartClearCache()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartConfig
     *
     * cart.config.
     *
     */
    public function testCartConfig()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartConfigUpdate
     *
     * cart.config.update.
     *
     */
    public function testCartConfigUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartCouponAdd
     *
     * cart.coupon.add.
     *
     */
    public function testCartCouponAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartCouponConditionAdd
     *
     * cart.coupon.condition.add.
     *
     */
    public function testCartCouponConditionAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartCouponCount
     *
     * cart.coupon.count.
     *
     */
    public function testCartCouponCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartCouponDelete
     *
     * cart.coupon.delete.
     *
     */
    public function testCartCouponDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartCouponList
     *
     * cart.coupon.list.
     *
     */
    public function testCartCouponList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartCreate
     *
     * cart.create.
     *
     */
    public function testCartCreate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartDelete
     *
     * cart.delete.
     *
     */
    public function testCartDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartDisconnect
     *
     * cart.disconnect.
     *
     */
    public function testCartDisconnect()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartGiftcardAdd
     *
     * cart.giftcard.add.
     *
     */
    public function testCartGiftcardAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartGiftcardCount
     *
     * cart.giftcard.count.
     *
     */
    public function testCartGiftcardCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartGiftcardDelete
     *
     * cart.giftcard.delete.
     *
     */
    public function testCartGiftcardDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartGiftcardList
     *
     * cart.giftcard.list.
     *
     */
    public function testCartGiftcardList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartInfo
     *
     * cart.info.
     *
     */
    public function testCartInfo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartList
     *
     * cart.list.
     *
     */
    public function testCartList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartMetaDataList
     *
     * cart.meta_data.list.
     *
     */
    public function testCartMetaDataList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartMetaDataSet
     *
     * cart.meta_data.set.
     *
     */
    public function testCartMetaDataSet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartMetaDataUnset
     *
     * cart.meta_data.unset.
     *
     */
    public function testCartMetaDataUnset()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartMethods
     *
     * cart.methods.
     *
     */
    public function testCartMethods()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartPluginList
     *
     * cart.plugin.list.
     *
     */
    public function testCartPluginList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartScriptAdd
     *
     * cart.script.add.
     *
     */
    public function testCartScriptAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartScriptDelete
     *
     * cart.script.delete.
     *
     */
    public function testCartScriptDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartScriptList
     *
     * cart.script.list.
     *
     */
    public function testCartScriptList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartShippingZonesList
     *
     * cart.shipping_zones.list.
     *
     */
    public function testCartShippingZonesList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cartValidate
     *
     * cart.validate.
     *
     */
    public function testCartValidate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
