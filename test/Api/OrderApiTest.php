<?php
/**
 * OrderApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.11.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OrderApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrderApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for orderAbandonedList
     *
     * order.abandoned.list.
     *
     */
    public function testOrderAbandonedList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderAdd
     *
     * order.add.
     *
     */
    public function testOrderAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderCalculate
     *
     * order.calculate.
     *
     */
    public function testOrderCalculate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderCount
     *
     * order.count.
     *
     */
    public function testOrderCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderFinancialStatusList
     *
     * order.financial_status.list.
     *
     */
    public function testOrderFinancialStatusList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderFulfillmentStatusList
     *
     * order.fulfillment_status.list.
     *
     */
    public function testOrderFulfillmentStatusList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderInfo
     *
     * order.info.
     *
     */
    public function testOrderInfo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderList
     *
     * order.list.
     *
     */
    public function testOrderList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderPreestimateShippingList
     *
     * order.preestimate_shipping.list.
     *
     */
    public function testOrderPreestimateShippingList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderRefundAdd
     *
     * order.refund.add.
     *
     */
    public function testOrderRefundAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderReturnAdd
     *
     * order.return.add.
     *
     */
    public function testOrderReturnAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderReturnDelete
     *
     * order.return.delete.
     *
     */
    public function testOrderReturnDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderReturnUpdate
     *
     * order.return.update.
     *
     */
    public function testOrderReturnUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderShipmentAdd
     *
     * order.shipment.add.
     *
     */
    public function testOrderShipmentAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderShipmentAddBatch
     *
     * order.shipment.add.batch.
     *
     */
    public function testOrderShipmentAddBatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderShipmentDelete
     *
     * order.shipment.delete.
     *
     */
    public function testOrderShipmentDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderShipmentInfo
     *
     * order.shipment.info.
     *
     */
    public function testOrderShipmentInfo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderShipmentList
     *
     * order.shipment.list.
     *
     */
    public function testOrderShipmentList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderShipmentTrackingAdd
     *
     * order.shipment.tracking.add.
     *
     */
    public function testOrderShipmentTrackingAdd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderShipmentUpdate
     *
     * order.shipment.update.
     *
     */
    public function testOrderShipmentUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderStatusList
     *
     * order.status.list.
     *
     */
    public function testOrderStatusList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderTransactionList
     *
     * order.transaction.list.
     *
     */
    public function testOrderTransactionList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderUpdate
     *
     * order.update.
     *
     */
    public function testOrderUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
